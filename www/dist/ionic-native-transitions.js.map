{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f6c2befd6673dd69b9f9","webpack:///./lib/index.js","webpack:///./lib/provider.js","webpack:///./lib/nativeSref.js","webpack:///./lib/run.js"],"names":[],"mappings":"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","file":"ionic-native-transitions.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ionicNativeTransitions\"] = factory();\n\telse\n\t\troot[\"ionicNativeTransitions\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f6c2befd6673dd69b9f9\n **/","import Provider from './provider.js';\nimport nativeSref from './nativeSref.js';\nimport Run from './run.js';\n\nlet mod = angular.module('ionic-native-transitions', [\n    'ionic',\n    'ui.router'\n]);\n\nmod.directive('nativeUiSref', nativeSref);\nmod.provider('$ionicNativeTransitions', Provider);\nmod.run(Run);\n\nexport default mod = mod.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/index.js\n **/","/**\n * @ngdoc service\n * @name ionic-native-transitions.$ionicNativeTransitions\n * @description\n * ionic-native-transitions service\n */\n/**\n * @ngdoc service\n * @name ionic-native-transitions.$ionicNativeTransitionsProvider\n * @description\n * ionic-native-transitions provider\n */\nexport default function() {\n    'ngInject';\n\n    let enabled = true,\n        $stateChangeStart = null,\n        $stateChangeSuccess = null,\n        $stateChangeError = null,\n        $stateAfterEnter = null,\n        defaultTransition = {\n            type: 'slide',\n            direction: 'left'\n        },\n        defaultBackTransition = {\n            type: 'slide',\n            direction: 'right'\n        },\n        defaultOptions = {\n            duration: 400, // in milliseconds (ms), default 400,\n            slowdownfactor: 4, // overlap views (higher number is more) or no overlap (1), default 4\n            iosdelay: -1, // ms to wait for the iOS webview to update before animation kicks in, default -1\n            androiddelay: -1, // same as above but for Android, default -1\n            winphonedelay: -1, // same as above but for Windows Phone, default -1,\n            fixedPixelsTop: 0, // the number of pixels of your fixed header, default 0 (iOS and Android)\n            fixedPixelsBottom: 0, // the number of pixels of your fixed footer (f.i. a tab bar), default 0 (iOS and Android),\n            triggerTransitionEvent: '$ionicView.afterEnter' // internal ionic-native-transitions option\n        };\n\n    return {\n        $get,\n        enable,\n        setDefaultTransition,\n        setDefaultBackTransition,\n        setDefaultOptions\n    };\n\n    /**\n     * @ngdoc function\n     * @name ionic-native-transitions.$ionicNativeTransitionsProvider#enable\n     * @access public\n     * @methodOf ionic-native-transitions.$ionicNativeTransitionsProvider\n     *\n     * @description\n     * Overwrite default nativepagetransitions plugin options\n     * @param {object} injectedOptions  options that will overwrite defaults\n     */\n    function enable(enabled = true) {\n        enable = enabled;\n        return this;\n    }\n\n    /**\n     * @ngdoc function\n     * @name ionic-native-transitions.$ionicNativeTransitionsProvider#isEnabled\n     * @access public\n     * @methodOf ionic-native-transitions.$ionicNativeTransitionsProvider\n     *\n     * @description\n     * Is ionic-native-transitions enabled or not?\n     */\n    /**\n     * @ngdoc function\n     * @name ionic-native-transitions.$ionicNativeTransitions#isEnabled\n     * @access public\n     * @methodOf ionic-native-transitions.$ionicNativeTransitions\n     *\n     * @description\n     * Is ionic-native-transitions enabled or not?\n     */\n    function isEnabled() {\n        if (window.cordova && window.plugins && window.plugins.nativepagetransitions) {\n            return enable;\n        }\n        return false;\n    }\n\n    /**\n     * @ngdoc function\n     * @name ionic-native-transitions.$ionicNativeTransitionsProvider#setDefaultOptions\n     * @access public\n     * @methodOf ionic-native-transitions.$ionicNativeTransitionsProvider\n     *\n     * @description\n     * Overwrite default nativepagetransitions plugin options\n     * @param {object} injectedOptions  options that will overwrite defaults\n     */\n    function setDefaultOptions(injectedOptions = {}) {\n        angular.extend(defaultOptions, injectedOptions);\n        return this;\n    }\n\n    /**\n     * @ngdoc function\n     * @name ionic-native-transitions.$ionicNativeTransitionsProvider#setDefaultTransition\n     * @access public\n     * @methodOf ionic-native-transitions.$ionicNativeTransitionsProvider\n     *\n     * @description\n     * Overwrite default transitions\n     * @param {object} transitionOptions  options that will overwrite defaults\n     */\n    function setDefaultTransition(transition = {}) {\n        angular.extend(defaultTransition, transition);\n        return this;\n    }\n\n    /**\n     * @ngdoc function\n     * @name ionic-native-transitions.$ionicNativeTransitionsProvider#setDefaultBackTransition\n     * @access public\n     * @methodOf ionic-native-transitions.$ionicNativeTransitionsProvider\n     *\n     * @description\n     * Overwrite default back transitions\n     * @param {object} transitionOptions  options that will overwrite defaults\n     */\n    function setDefaultBackTransition(transition = {}) {\n        angular.extend(defaultBackTransition, transition);\n        return this;\n    }\n\n    function $get($log, $ionicConfig, $rootScope, $timeout, $state, $location) {\n        'ngInject';\n\n        return {\n            init,\n            getDefaultOptions,\n            enable: enableFromService,\n                isEnabled,\n                transition,\n                registerToRouteEvents,\n                unregisterToRouteEvents,\n                registerToStateChangeStartEvent,\n                unregisterToStateChangeStartEvent,\n                locationUrl,\n                stateGo\n        };\n\n\n        /**\n         * @ngdoc function\n         * @name ionic-native-transitions.$ionicNativeTransitions#locationUrl\n         * @access public\n         * @methodOf ionic-native-transitions.$ionicNativeTransitions\n         *\n         * @description\n         * Call location url and apply a native transition\n         * @param {string|null} url                 default:null\n         * @param {object|null} transitionOptions   default:null\n         */\n        function locationUrl(url = null, transitionOptions = null) {\n            if (!url) {\n                $log.debug('[native transition] cannot change url without url...');\n                return;\n            }\n            unregisterToStateChangeStartEvent();\n            $location.url(url);\n            transition(transitionOptions);\n        }\n\n        /**\n         * @ngdoc function\n         * @name ionic-native-transitions.$ionicNativeTransitions#stateGo\n         * @access public\n         * @methodOf ionic-native-transitions.$ionicNativeTransitions\n         *\n         * @description\n         * Call state go and apply a native transition\n         * @param {string|null} state              default:null\n         * @param {object}      stateOptions       default:{}\n         * @param {object|null} transitionOptions  default:null\n         */\n        function stateGo(state = null, stateOptions = {}, transitionOptions = null) {\n            if (!state) {\n                $log.debug('[native transition] cannot change state without a state...');\n                return;\n            }\n            unregisterToStateChangeStartEvent();\n            $state.go(state, stateOptions);\n            transition(transitionOptions);\n        }\n\n        /**\n         * @ngdoc function\n         * @name ionic-native-transitions.$ionicNativeTransitions#enable\n         * @access public\n         * @methodOf ionic-native-transitions.$ionicNativeTransitions\n         *\n         * @description\n         * enable/disable plugin\n         * @param {boolean} enabled\n         * @param {boolean} disableIonicTransitions\n         * @param {string}  ionicTransitionType\n         */\n        function enableFromService(enabled = true, disableIonicTransitions = true, ionicTransitionType = 'platform') {\n            if (enabled && !(window.cordova && window.plugins && window.plugins.nativepagetransitions)) {\n                $log.debug('[native transition] is disabled or nativepagetransitions plugin is not present');\n                return;\n            }\n            enable = enabled;\n\n            if (enabled) {\n                $log.debug('[native transition] enabling plugin');\n                if (window.plugins && window.plugins.nativepagetransitions) {\n                    angular.extend(window.plugins.nativepagetransitions.globalOptions, getDefaultOptions());\n                }\n                registerToRouteEvents();\n            } else {\n                $log.debug('[native transition] disabling plugin');\n                if (typeof arguments[1] === 'undefined') {\n                    disableIonicTransitions = false;\n                }\n                unregisterToRouteEvents();\n            }\n\n            if (disableIonicTransitions) {\n                $log.debug('[native transition] disabling ionic transitions');\n                $ionicConfig.views.transition('none');\n            } else {\n                $log.debug('[native transition] enabling ionic transitions');\n                $ionicConfig.views.transition(ionicTransitionType);\n            }\n\n            return this;\n        }\n\n        function transition() {\n            if (!isEnabled()) {\n                return;\n            }\n            let options = {}\n            if (angular.isObject(arguments[0])) {\n                options = arguments[0];\n            } else if (angular.isString(arguments[0])) {\n                switch (arguments[0]) {\n                    case 'back':\n                        options = defaultBackTransition;\n                        break;\n                }\n            } else {\n                options = defaultTransition;\n            }\n            options = angular.copy(options);\n            let type = options.type;\n            delete options.type;\n            $log.debug('[native transition]', options);\n            switch (type) {\n                case 'flip':\n                    window.plugins.nativepagetransitions.flip(options, transitionSuccess, transitionError);\n                    break;\n                case 'fade':\n                    window.plugins.nativepagetransitions.fade(options, transitionSuccess, transitionError);\n                    break;\n                case 'curl':\n                    window.plugins.nativepagetransitions.curl(options, transitionSuccess, transitionError);\n                    break;\n                case 'drawer':\n                    window.plugins.nativepagetransitions.drawer(options, transitionSuccess, transitionError);\n                    break;\n                case 'slide':\n                default:\n                    window.plugins.nativepagetransitions.slide(options, transitionSuccess, transitionError);\n                    break;\n            }\n\n            function getTransitionDuration() {\n                let duration;\n                if (options.duration) {\n                    duration = parseInt(options.duration);\n                } else {\n                    duration = parseInt(getDefaultOptions().duration);\n                }\n                if (ionic.Platform.isAndroid()) {\n                    if (options.androiddelay) {\n                        duration += parseInt(options.androiddelay);\n                    } else {\n                        duration += parseInt(getDefaultOptions().androiddelay);\n                    }\n                } else if (ionic.Platform.isIOS()) {\n                    if (options.iosdelay) {\n                        duration += parseInt(options.iosdelay);\n                    } else {\n                        duration += parseInt(getDefaultOptions().iosdelay);\n                    }\n                } else if (ionic.Platform.isWindowsPhone()) {\n                    if (options.winphonedelay) {\n                        duration += parseInt(options.winphonedelay);\n                    } else {\n                        duration += parseInt(getDefaultOptions().winphonedelay);\n                    }\n                }\n                return duration;\n            }\n\n            function transitionSuccess() {\n                setTimeout(() => $rootScope.$broadcast('ionicNativeTransitions.success'), getTransitionDuration());\n            }\n\n            function transitionError() {\n                setTimeout(() => $rootScope.$broadcast('ionicNativeTransitions.error'), getTransitionDuration());\n            }\n        }\n\n        function executePendingTransition() {\n            window.plugins.nativepagetransitions.executePendingTransition();\n            // $rootScope.$broadcast('ionicNativeTransitions.', executePendingTransition);\n            registerToStateChangeStartEvent();\n        }\n\n        function registerToRouteEvents() {\n            unregisterToRouteEvents();\n            registerToStateChangeStartEvent();\n            // $stateChangeSuccess = $rootScope.$on('$stateChangeSuccess', executePendingTransition);\n            $stateChangeError = $rootScope.$on('$stateChangeError', executePendingTransition);\n            $stateAfterEnter = $rootScope.$on(getDefaultOptions().triggerTransitionEvent, executePendingTransition);\n        }\n\n        function registerToStateChangeStartEvent() {\n            if ($stateChangeStart) {\n                return;\n            }\n            $stateChangeStart = $rootScope.$on('$stateChangeStart', (event, toState, toParams, fromState, fromParams) => {\n                let options = null;\n                // Disable native transition for this state\n                if (toState.nativeTransitions === null) {\n                    return;\n                }\n                if (angular.isObject(toState.nativeTransitionsIOS) && ionic.Platform.isIOS()) {\n                    options = toState.nativeTransitionsIOS;\n                } else if (angular.isObject(toState.nativeTransitionsAndroid) && ionic.Platform.isAndroid()) {\n                    options = toState.nativeTransitionsAndroid;\n                } else if (angular.isObject(toState.nativeTransitionsWindowsPhone) && ionic.Platform.isWindowsPhone()) {\n                    options = toState.nativeTransitionsWindowsPhone;\n                } else if (angular.isObject(toState.nativeTransitions)) {\n                    options = toState.nativeTransitions;\n                }\n                $log.debug('[native transition] $stateChangeStart', toState, options);\n                transition(options);\n            });\n        }\n\n        function unregisterToStateChangeStartEvent() {\n            if ($stateChangeStart && angular.isFunction($stateChangeStart)) {\n                $stateChangeStart();\n                $stateChangeStart = null;\n            }\n        }\n\n        function unregisterToRouteEvents() {\n            if ($stateChangeStart && angular.isFunction($stateChangeStart)) {\n                $stateChangeStart();\n                $stateChangeStart = null;\n            }\n            if ($stateChangeSuccess && angular.isFunction($stateChangeSuccess)) {\n                $stateChangeSuccess();\n                $stateChangeSuccess = null;\n            }\n            if ($stateChangeError && angular.isFunction($stateChangeError)) {\n                $stateChangeError();\n                $stateChangeError = null;\n            }\n            if ($stateAfterEnter && angular.isFunction($stateAfterEnter)) {\n                $stateAfterEnter();\n                $stateAfterEnter = null;\n            }\n        }\n\n        /**\n         * @ngdoc function\n         * @name ionic-native-transitions.$ionicNativeTransitions#getDefaultOptions\n         * @access public\n         * @methodOf ionic-native-transitions.$ionicNativeTransitions\n         *\n         * @description\n         * Get default options\n         */\n        function getDefaultOptions() {\n            return defaultOptions;\n        }\n\n        /**\n         * @ngdoc function\n         * @name ionic-native-transitions.$ionicNativeTransitions#init\n         * @access public\n         * @methodOf ionic-native-transitions.$ionicNativeTransitions\n         *\n         * @description\n         * Init nativepagetransitions plugin\n         */\n        function init() {\n            if (!isEnabled()) {\n                $log.debug('nativepagetransitions is disabled or nativepagetransitions plugin is not present');\n                return;\n            } else {\n                enableFromService();\n            }\n        }\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/provider.js\n **/","export default function($log, $ionicNativeTransitions, $state) {\n    'ngInject';\n\n    return {\n        link: link,\n        restrict: 'A',\n        scope: false\n    };\n\n    function link(scope, element, attrs) {\n        'ngInject';\n\n        let state = attrs.nativeUiSref;\n        let optionsOverride = scope.$eval(attrs.nativeUiSrefOpts) || {};\n        let options = null;\n\n        attrs.$observe('nativeOptions', (newOptions) => {\n            let evalOptions = scope.$eval(newOptions);\n            options = angular.isObject(evalOptions) ? evalOptions : {};\n        });\n\n        if (!state) {\n            return;\n        }\n\n        element.on('click', (event) => {\n            if (!$ionicNativeTransitions.isEnabled()) {\n                $state.go(state, optionsOverride);\n                return;\n            }\n\n            $ionicNativeTransitions.stateGo(state, optionsOverride, options);\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/nativeSref.js\n **/","/**\n * @ngdoc service\n * @name ionic-native-transitions.$ionicNativeTransitions\n * @description\n * ionic-native-transitions service\n */\n/**\n * @ngdoc service\n * @name ionic-native-transitions.$ionicNativeTransitionsProvider\n * @description\n * ionic-native-transitions provider\n */\nexport default function($ionicNativeTransitions, $ionicPlatform, $ionicHistory, $rootScope) {\n    'ngInject';\n\n    $ionicPlatform.ready(() => {\n        $ionicNativeTransitions.init();\n\n        if (!$ionicNativeTransitions.isEnabled()) {\n            return;\n        }\n\n        $rootScope.$ionicGoBack = goBack;\n\n        $ionicPlatform.onHardwareBackButton((event) => goBack());\n\n        function goBack() {\n            if (!$ionicHistory.backView()) {\n                return;\n            }\n            $ionicNativeTransitions.unregisterToStateChangeStartEvent();\n            $ionicHistory.goBack();\n            $ionicNativeTransitions.transition('back');\n        }\n    });\n\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/run.js\n **/"],"sourceRoot":""}